"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stocksClient = void 0;
const request_1 = require("../transport/request");
const aggregates_1 = require("./aggregates");
const conditionMappings_1 = require("./conditionMappings");
const dailyOpenClose_1 = require("./dailyOpenClose");
const exchanges_1 = require("./exchanges");
const lastQuoteForSymbol_1 = require("./lastQuoteForSymbol");
const lastTradeForSymbol_1 = require("./lastTradeForSymbol");
const snapshots_1 = require("./snapshots");
const v1HistoricQuotes_1 = require("./v1HistoricQuotes");
const v1HistoricTrades_1 = require("./v1HistoricTrades");
const v2HistoricQuotes_1 = require("./v2HistoricQuotes");
const v2HistoricTrades_1 = require("./v2HistoricTrades");
const stocksClient = (apiKey, apiBase = "https://api.polygon.io") => ({
    conditionMappings: request_1.auth(apiKey, conditionMappings_1.conditionMappings, apiBase),
    dailyOpenClose: request_1.auth(apiKey, dailyOpenClose_1.dailyOpenClose, apiBase),
    exchanges: request_1.auth(apiKey, exchanges_1.exchanges, apiBase),
    lastQuoteForSymbol: request_1.auth(apiKey, lastQuoteForSymbol_1.lastQuoteForSymbol, apiBase),
    lastTradeForSymbol: request_1.auth(apiKey, lastTradeForSymbol_1.lastTradeForSymbol, apiBase),
    v1HistoricQuotes: request_1.auth(apiKey, v1HistoricQuotes_1.v1HistoricQuotes, apiBase),
    v1HistoricTrades: request_1.auth(apiKey, v1HistoricTrades_1.v1HistoricTrades, apiBase),
    v2HistoricQuotes: request_1.auth(apiKey, v2HistoricQuotes_1.v2HistoricQuotes, apiBase),
    v2HistoricTrades: request_1.auth(apiKey, v2HistoricTrades_1.v2HistoricTrades, apiBase),
    // snapshot
    snapshotAllTickers: request_1.auth(apiKey, snapshots_1.snapshotAllTickers, apiBase),
    snapshotSingleTicker: request_1.auth(apiKey, snapshots_1.snapshotSingleTicker, apiBase),
    snapshotGainersLosers: request_1.auth(apiKey, snapshots_1.snapshotGainersLosers, apiBase),
    // aggregates
    previousClose: request_1.auth(apiKey, aggregates_1.stocksPreviousClose, apiBase),
    aggregates: request_1.auth(apiKey, aggregates_1.stocksAggregates, apiBase),
    groupedDaily: request_1.auth(apiKey, aggregates_1.stocksGroupedDaily, apiBase)
});
exports.stocksClient = stocksClient;
exports.default = exports.stocksClient;
